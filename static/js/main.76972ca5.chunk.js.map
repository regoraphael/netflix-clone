{"version":3,"sources":["tmdb.js","components/MovieRow.jsx","components/FeaturedMovie.jsx","components/Header.jsx","images/Netflix_LoadTime.gif","App.js","index.js"],"names":["basicFetch","endpoit","a","fetch","req","json","data","getHomeList","slug","title","itens","getMovieInfo","movieId","type","info","MovieRow","useState","marginLeft","changeMarginLeft","length","results","className","onClick","x","window","innerWidth","aria-hidden","style","fontSize","width","map","item","src","poster_path","alt","FeaturedMovie","firstDate","Date","first_air_date","genres","forEach","genre","push","description","overview","substring","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","join","Header","black","App","movielist","setMovieList","featuredData","setFeaturedData","blackHeader","setBlackHeader","useEffect","tmdb","list","originals","filter","randomChosen","Math","floor","random","choosen","id","choosenInfo","loadAll","scrollListener","scrollY","addEventListener","removeEventListener","key","netflixLoading","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76972ca5.chunk.js","sourcesContent":["const API_KEY = 'api_key=b23f84f9f796ea9c6cc366fdd07589ae';\nconst API_BASE = 'https://api.themoviedb.org/3';\nconst API_LANGUAGE = 'language=pt-BR';\n\nconst basicFetch = async (endpoit) => {\n  const req = await fetch(`${API_BASE}${endpoit}${API_LANGUAGE}&${API_KEY}`);\n  const json = await req.json();\n  return json;\n};\n\nconst data = {\n  getHomeList: async () => ([\n    {\n      slug: 'originals',\n      title: 'Originais do Netflix',\n      itens: await basicFetch('/discover/tv?with_network=213$'),\n    },\n    {\n      slug: 'trending',\n      title: 'Recomendados para Você',\n      itens: await basicFetch('/trending/all/week?'),\n    },\n    {\n      slug: 'toprated',\n      title: 'Em Alta',\n      itens: await basicFetch('/movie/top_rated?'),\n    },\n    {\n      slug: 'action',\n      title: 'Ação',\n      itens: await basicFetch('/discover/movie?with_genres=28&'),\n    },\n    {\n      slug: 'comedy',\n      title: 'Comédia',\n      itens: await basicFetch('/discover/movie?with_genres=35&'),\n    },\n    {\n      slug: 'horror',\n      title: 'Terror',\n      itens: await basicFetch('/discover/movie?with_genres=27&'),\n    },\n    {\n      slug: 'romance',\n      title: 'Romance',\n      itens: await basicFetch('/discover/movie?with_genres=10749&'),\n    },\n    {\n      slug: 'documentary',\n      title: 'Documentário',\n      itens: await basicFetch('/discover/movie?with_genres=99&'),\n    },\n  ]\n  ),\n  getMovieInfo: async (movieId, type) => {\n    let info = {};\n    if (movieId) {\n      if (type === 'movie') {\n        info = await basicFetch(`/movie/${movieId}?`);\n      } else if (type === 'tv') {\n        info = await basicFetch(`/tv/${movieId}?`);\n      }\n    }\n    return info;\n  },\n};\n\nexport default data;\n","import React, { useState } from 'react';\nimport './MovieRow.css';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport { arrayOf, string } from 'prop-types';\n\nconst MovieRow = ({ title, itens }) => {\n  const [marginLeft, changeMarginLeft] = useState(0);\n  const { length } = itens.results;\n  const leftClick = () => {\n    let x = marginLeft + (window.innerWidth / 2);\n    if (x > 0) {\n      x = 0;\n    }\n    changeMarginLeft(x);\n  };\n  const rightClick = () => {\n    let x = marginLeft - (window.innerWidth / 2);\n    if (x < window.innerWidth - (length * 150)) {\n      x = window.innerWidth - (length * 150) - 60;\n    }\n    changeMarginLeft(x);\n  };\n  return (\n    <div className=\"movieRow\">\n      <h2>{ title }</h2>\n      <div className=\"movieRow--left\" onClick={leftClick} aria-hidden=\"true\">\n        <NavigateBeforeIcon style={{ fontSize: 50 }} />\n      </div>\n      <div className=\"movieRow--right\" onClick={rightClick} aria-hidden=\"true\">\n        <NavigateNextIcon style={{ fontSize: 50 }} />\n      </div>\n      <div className=\"movieRow--listarea\">\n        <div className=\"movieRow--list\" style={{ marginLeft, width: length * 150 }}>\n          {itens.results.map((item) => (\n            <div className=\"movieRow--item\">\n              <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt=\"movie poster\" />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMovieRow.propTypes = {\n  title: string,\n  itens: arrayOf(),\n}.isRequired;\n\nexport default MovieRow;\n","import React from 'react';\nimport './FeaturedMovie.css';\nimport PropTypes, { array } from 'prop-types';\n\nconst FeaturedMovie = ({ item }) => {\n  const firstDate = new Date(item.first_air_date);\n  const genres = [];\n  item.genres.forEach((genre) => {\n    genres.push(genre);\n  });\n\n  let description = item.overview;\n  if (description.length > 200) {\n    description = `${description.substring(0, 200)}...`;\n  }\n\n  return (\n    <section\n      className=\"featured\"\n      style={{\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`,\n      }}\n    >\n      <div className=\"featured--vertical\">\n        <div className=\"featured--horizontal\">\n          <div className=\"featured--name\">{ item.original_name }</div>\n          <div className=\"featured--info\">\n            <div className=\"featured--points\">\n              {`${item.vote_average} ` }\n              pontos\n            </div>\n            <div className=\"featured--year\">{firstDate.getFullYear()}</div>\n            <div className=\"featured--seasons\">\n              {`${item.number_of_seasons} `}\n              temporada\n              {item.number_of_seasons !== 1 ? 's' : ''}\n            </div>\n          </div>\n          <div className=\"featured--description\">{ description }</div>\n          <div className=\"featured--buttons\">\n            <button type=\"button\" className=\"featured--watchbutton\">▶ Assistir</button>\n            <button type=\"button\" className=\"featured--mylistbutton\">+ Minha Lista</button>\n          </div>\n          <div className=\"featured--genres\">\n            <strong>Gêneros:</strong>\n            { genres.join(', ') }\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nFeaturedMovie.propTypes = {\n  item: PropTypes.objectOf(array),\n}.isRequired;\n\nexport default FeaturedMovie;\n","import { bool } from 'prop-types';\nimport React from 'react';\nimport './Header.css';\n\nconst Header = ({ black }) => (\n  <header className={black ? 'black' : ''}>\n    <div className=\"header--logo\">\n      <img\n        src=\"https://upload.wikimedia.org/wikipedia/commons/7/7a/Logonetflix.png\"\n        alt=\"netflix-logo\"\n      />\n    </div>\n    <div className=\"header--user\">\n      <img\n        src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"\n        alt=\"user-logo\"\n      />\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  black: bool,\n}.isRequired;\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/Netflix_LoadTime.6ecc95c2.gif\";","import React, { useEffect, useState } from 'react';\nimport tmdb from './tmdb';\nimport MovieRow from './components/MovieRow';\nimport FeaturedMovie from './components/FeaturedMovie';\nimport Header from './components/Header';\nimport netflixLoading from './images/Netflix_LoadTime.gif';\nimport './App.css';\n\nconst App = () => {\n  const [movielist, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n\n  useEffect(() => {\n    const loadAll = async () => {\n      const list = await tmdb.getHomeList();\n      setMovieList(list);\n\n      const originals = list.filter((item) => item.slug === 'originals');\n      const randomChosen = Math.floor(Math.random() * (originals[0].itens.results.length - 1));\n      const choosen = originals[0].itens.results[randomChosen];\n      const choosenInfo = await tmdb.getMovieInfo(choosen.id, 'tv');\n      setFeaturedData(choosenInfo);\n    };\n    loadAll();\n  }, []);\n  useEffect(() => {\n    const scrollListener = () => {\n      if (window.scrollY > 10) {\n        setBlackHeader(true);\n      } else {\n        setBlackHeader(false);\n      }\n    };\n    window.addEventListener('scroll', scrollListener);\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    };\n  }, []);\n\n  return (\n    <div className=\"page\">\n      <Header black={blackHeader}/>\n      {featuredData && \n      <FeaturedMovie item={ featuredData }/>        \n      }\n      <section className=\"lists\">\n        { movielist.map((item, key)=> (\n          <MovieRow\n            key={ key }\n            title={ item.title }\n            itens={ item.itens }\n          />\n        ))}\n      </section>\n      <footer>\n        Direitos de imagem para Netflix<br/>\n        Dados extraidos do site Themoviedb.org\n      </footer>\n      { movielist.length <= 0 && \n      <div id=\"loading\">\n        <img src={netflixLoading} alt=\"loading\" />\n      </div>}\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}