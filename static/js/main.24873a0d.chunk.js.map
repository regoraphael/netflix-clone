{"version":3,"sources":["tmdb.js","components/MovieRow.js","components/FeaturedMovie.js","components/Header.js","images/Netflix_LoadTime.gif","App.js","index.js"],"names":["basicFetch","endpoit","a","fetch","req","json","data","getHomeList","slug","title","itens","getMovieInfo","movieId","type","info","MovieRow","useState","marginLeft","changeMarginLeft","length","results","className","onClick","x","window","innerWidth","style","fontSize","width","map","item","key","src","poster_path","alt","FeaturedMovie","firstDate","Date","first_air_date","genres","i","push","name","description","overview","substring","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","href","join","Header","black","App","movielist","setMovieList","featuredData","setFeaturedData","blackHeader","setBlackHeader","useEffect","tmdb","list","originals","filter","randomChosen","Math","floor","random","choosen","id","choosenInfo","loadAll","scrollListener","scrollY","addEventListener","removeEventListener","netflixLoading","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24873a0d.chunk.js","sourcesContent":["const API_KEY = 'api_key=b23f84f9f796ea9c6cc366fdd07589ae';\nconst API_BASE = 'https://api.themoviedb.org/3';\nconst API_LANGUAGE = \"language=pt-BR\"\n\nconst basicFetch = async (endpoit) => {\n  const req = await fetch(`${API_BASE}${endpoit}${API_LANGUAGE}&${API_KEY}`);\n  const json = await req.json();\n  return json;\n}\n\nconst data = {\n  getHomeList: async () => {\n    return [\n      {\n        slug: 'originals',\n        title:'Originais do Netflix',\n        itens: await basicFetch(`/discover/tv?with_network=213$`),\n      },\n      {\n        slug: 'trending',\n        title: 'Recomendados para Você',\n        itens:  await basicFetch('/trending/all/week?'),\n      },\n      {\n        slug: 'toprated',\n        title: 'Em Alta',\n        itens:  await basicFetch('/movie/top_rated?')\n      },\n      {\n        slug: 'action',\n        title: 'Ação',\n        itens:  await basicFetch('/discover/movie?with_genres=28&')\n      },\n      {\n        slug: 'comedy',\n        title: 'Comédia',\n        itens:  await basicFetch('/discover/movie?with_genres=35&')\n      },\n      {\n        slug: 'horror',\n        title: 'Terror',\n        itens:  await basicFetch('/discover/movie?with_genres=27&')\n      },\n      {\n        slug: 'romance',\n        title: 'Romance',\n        itens:  await basicFetch('/discover/movie?with_genres=10749&')\n      },\n      {\n        slug: 'documentary',\n        title: 'Documentário',\n        itens:  await basicFetch('/discover/movie?with_genres=99&')\n      },\n    ]\n  },\n  getMovieInfo: async (movieId, type) => {\n    let info = {};\n    if(movieId) {\n      if(type === 'movie') {\n        info = await basicFetch(`/movie/${movieId}?`);\n      } else if (type === 'tv') {\n        info = await basicFetch(`/tv/${movieId}?`);\n      }\n    }\n    return info;\n  }\n}\n\nexport default data;\n","import React, { useState } from 'react';\nimport './MovieRow.css';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\n\nconst MovieRow = ({ title, itens }) => {\n  const [marginLeft, changeMarginLeft] = useState(0);\n  const leftClick = () => {\n    let x = marginLeft + (window.innerWidth / 2);\n    if(x > 0) {\n      x = 0;\n    }\n    changeMarginLeft(x);\n  }\n  const rightClick = () => {\n    let x = marginLeft - (window.innerWidth / 2)\n    if (x < window.innerWidth - (length * 150)){\n      x = window.innerWidth - (length*150) - 60;\n    }\n    changeMarginLeft(x);\n  }\n  const { length } = itens.results;\n  return (\n    <div className=\"movieRow\">\n      <h2>{ title }</h2>\n      <div className=\"movieRow--left\" onClick={leftClick}>\n        <NavigateBeforeIcon style={{fontSize: 50}} />\n      </div>\n      <div className=\"movieRow--right\" onClick={rightClick}>\n        <NavigateNextIcon style={{fontSize: 50}} />\n      </div>\n      <div className=\"movieRow--listarea\">\n        <div className=\"movieRow--list\" style={{marginLeft, width: length*150}}>\n          {itens.results.map((item, key) =>(\n            <div className=\"movieRow--item\" key= { key }> \n              <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt=\"movie poster\" />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MovieRow;\n","import React from 'react';\nimport './FeaturedMovie.css'\n\nconst FeaturedMovie = ({ item }) => {\n  let firstDate = new Date(item.first_air_date);\n  let genres = [];\n  for(let i in item.genres){\n    genres.push(item.genres[i].name);\n  }\n \n  let description = item.overview;\n  if(description.length > 200) {\n    description = `${description.substring(0, 200)}...`;\n  }\n\n  return (\n    <section className=\"featured\" style={{\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\n    }}>\n      <div className=\"featured--vertical\">\n        <div className=\"featured--horizontal\">\n          <div className=\"featured--name\">{ item.original_name }</div>\n          <div className=\"featured--info\">\n            <div className=\"featured--points\">{ item.vote_average } pontos</div>\n            <div className=\"featured--year\">{firstDate.getFullYear()}</div>\n            <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\n          </div>\n          <div className=\"featured--description\">{ description }</div>\n          <div className=\"featured--buttons\">\n            <a href=\"\" className=\"featured--watchbutton\">▶ Assistir</a>\n            <a href=\"\" className=\"featured--mylistbutton\">+ Minha Lista</a>\n          </div>\n          <div className=\"featured--genres\"><strong>Gêneros:</strong> { genres.join(', ') }</div>\n        </div>\n      </div>\n      \n    </section>\n  )\n}\n\nexport default FeaturedMovie;","import React from 'react'\nimport './Header.css';\n\nconst Header = ({black}) => {\n  return (\n    <header className={ black ? 'black' : '' }>\n      <div className=\"header--logo\">\n        <img src=\"https://upload.wikimedia.org/wikipedia/commons/7/7a/Logonetflix.png\" alt=\"netflix-logo\"/>\n      </div>\n      <div className=\"header--user\">\n        <img src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" alt=\"user-logo\"/>\n      </div>\n    </header>\n  )\n}\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/Netflix_LoadTime.6ecc95c2.gif\";","import tmdb from './tmdb';\nimport React, { useEffect, useState } from 'react';\nimport MovieRow from './components/MovieRow';\nimport FeaturedMovie from './components/FeaturedMovie';\nimport Header from './components/Header';\nimport netflixLoading from './images/Netflix_LoadTime.gif';\nimport './App.css'\n\nconst App = () => {\n  const [movielist, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n\n  useEffect(() => {\n    const loadAll = async () => {\n      let list = await tmdb.getHomeList();\n      setMovieList(list);\n      \n      let originals = list.filter((item) => item.slug === 'originals' );\n      let randomChosen = Math.floor(Math.random() * (originals[0].itens.results.length - 1));\n      let choosen = originals[0].itens.results[randomChosen];\n      let choosenInfo = await tmdb.getMovieInfo(choosen.id, 'tv');\n      setFeaturedData(choosenInfo);\n    }\n    loadAll();\n  }, []\n  );\n  useEffect(()=>{\n    const scrollListener = () => {\n      if(window.scrollY > 10) {\n        setBlackHeader(true);\n      } else {\n        setBlackHeader(false);\n      }\n    }\n    window.addEventListener('scroll', scrollListener);\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    }\n  }, []);\n\n  return (\n    <div className=\"page\">\n      <Header black={blackHeader}/>\n      {featuredData && \n      <FeaturedMovie item={ featuredData }/>        \n      }\n      <section className=\"lists\">\n        { movielist.map((item, key)=> (\n          <MovieRow\n            key={ key }\n            title={ item.title }\n            itens={ item.itens }\n          />\n        ))}\n      </section>\n      <footer>\n        Direitos de imagem para Netflix<br/>\n        Dados extraidos do site Themoviedb.org\n      </footer>\n      { movielist.length <= 0 && \n      <div id=\"loading\">\n        <img src={netflixLoading} alt=\"loading\" />\n      </div>}\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}